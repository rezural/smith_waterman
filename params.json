{"name":"Smith-Waterman in Rust","tagline":"Smith–Waterman algorithm","body":"### Smith–Waterman algorithm\r\n\r\n```\r\n    use smith_waterman;\r\n    let mut smitty = smith_waterman::SmithWaterman::new( \r\n                                         \"ACACACTA\".to_string(),\r\n                                         \"AGCACACA\".to_string());\r\n    let alignment = smitty.align();\r\n    println!(\"{:?}\", smitty);\r\n    println!(\"{:?}\", alignment);\r\n\r\n    -    -    A    C    A    C    A    C    T    A\r\n    -    0    0    0    0    0    0    0    0    0\r\n    A    0    2    1    2    1    2    1    0    2\r\n    G    0    1    1    1    1    1    1    0    1\r\n    C    0    0    3    2    3    2    3    2    1\r\n    A    0    2    2    5    4    5    4    3    4\r\n    C    0    1    4    4    7    6    7    6    5\r\n    A    0    2    3    6    6    9    8    7    8\r\n    C    0    1    4    5    8    8   11   10    9\r\n    A    0    2    3    6    7   10   10   10   12\r\n\r\n\r\n(\"A-CACACTA\", \"AGCACAC-A\")\r\n\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}